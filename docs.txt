*** Functions in the header file "banana.hpp" . ***

initialize() : fill the frame with spaces. To properly display the frame, it is advised
               that you should call this function at the beginning of your main() function.
               This can also be a convenient way to erase the frame when making animations.

fresh_frame() : display the frame afresh. When called, this function will update the frame
                to display whatever was last put in the 2d array that contains the frame's
                contents.

advance_frame(int milliseconds) : does the same as fresh_frame(), but waits for
                                  a given number of milliseconds immediately afterwards.
                                  For example, `advance_frame(42);` will refresh the
                                  frame and wait about 1/24th of a second before
                                  continuing the program. You could put this in a
                                  while loop to make a continuously refreshing frame.


blit(char, int x, int y) : changes one of the cells of the frame. The frame has twenty
                           rows and forty columns. Calling this function will replace
                           the cell whose coordinates it is given with its first
                           argument. For example, `blit('X', 3, 17);` will put the
                           character 'X' in the third cell on the seventeenth line.
                           Note that merely calling blit() will not on its own result
                           in a visible change in the frame's contents; you must thereafter
                           refresh the frame to see the character.

getkey() : waits for the user to enter a character and returns it immediately, without waiting
           for the user to input a newline. You could put this in a while loop with your calls
           to refresh the frame as a way of implementing basic controls, for example a WASD
           keypad.

line(int x0, int y0, int x1, int y1, char) : draw a line from (x0, y0) to (x1, y1)
                                             rendered in char. For example,
                                             `line(2, 2, 18, 18, 'X');` will make
                                             a line of 'X'es with endpoints at
                                             coordinates (2, 2) and (18, 18). Note
                                             that, as with blit(), you must refresh
                                             the frame to see the line.

draw_circle(int x, int y, int radius, char) : draw a circle, rendered in char, centered at
                                              the point (x, y), with radius.
                                              
draw_filled_circle(int x, int y, int radius, char) : does the same as draw_circle, but the
                                                     circle is filled.

is_occupied(int x, int y) : returns boolean `true` if the coordinates (x, y) do not contain a
                            space. Returns boolean `false` if they do.

contains(char, int x, int y) : returns `true` is coordinates (x, y) contain char. Otherwise
                               returns false.
